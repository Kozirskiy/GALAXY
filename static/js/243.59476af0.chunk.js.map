{"version":3,"file":"static/js/243.59476af0.chunk.js","mappings":"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","sources":["webpack://react-camasutra13012023/./src/components/Navbar/Dialogs/Dialogs.module.css?ba1e","components/Navbar/Dialogs/DialogItem.jsx","components/Navbar/Dialogs/MessageItem.jsx","components/Navbar/Dialogs/Dialogs.jsx","hoc/withAuthRedirect.js","components/Navbar/Dialogs/DialogsContainer.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"contentBlock\":\"Dialogs_contentBlock__8o4wS\",\"dflex\":\"Dialogs_dflex__v3rZW\",\"dialogs\":\"Dialogs_dialogs__ycx+h\",\"messages\":\"Dialogs_messages__rfdsG\",\"item\":\"Dialogs_item__vtwQO\",\"messagesBlock\":\"Dialogs_messagesBlock__YbhwZ\",\"active\":\"Dialogs_active__GMJtZ\",\"contentBlock__textarea_button\":\"Dialogs_contentBlock__textarea_button__PsuE+\"};","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport s from './Dialogs.module.css';\r\n\r\nconst DialogItem = (props) => {\r\n\r\n    let path = '/dialogs' + props.id;\r\n\r\n    return (\r\n        <div className={s.dialogs + ' ' + s.dflex}>\r\n            <div>\r\n\r\n                <NavLink className={s.item} to={path}>{props.name}</NavLink>\r\n                \r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DialogItem;","import React from 'react';\r\nimport Icon from '../Profile/Myposts/Post/iconForPost.png';\r\nimport s from './Dialogs.module.css';\r\n\r\nconst  MessageItem = (props) => {\r\n    return (\r\n        <div className={s.messagesBlock}>\r\n            <img src={Icon} alt=\"icon\" />\r\n            <p className={s.messagesItem}>{props.messageText}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MessageItem;","import React from 'react';\r\nimport s from './Dialogs.module.css';\r\nimport DialogItem from './DialogItem';\r\nimport MessageItem from './MessageItem';\r\nimport { Navigate } from 'react-router-dom';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { Textarea } from '../../common/FormsControls/FormsControls';\r\nimport { maxLenghtCreator, required } from '../../../utils/validators/validators';\r\n\r\nconst Dialogs = (props) => {\r\n\r\n    let state = props.messagePAGE;\r\n\r\n    let dialogElements = state.dialogData.map((d, index) => <DialogItem key={index} name={d.name} />);\r\n\r\n    let messageElements = state.messageData.map((m, index) => <MessageItem messageText={m.message} key={index} />);\r\n\r\n\r\n    let addNewMessage = (values) => {\r\n\r\n        props.newMessageDialogsGlobal(values.newMessageBody);\r\n    }\r\n\r\n    if (!props.isAuth) return <Navigate to={'/login'} />;\r\n\r\n\r\n    return (\r\n        <div className={s.contentBlock}>\r\n            <h2>Your dialogs in Galaxy</h2>\r\n            <div className={s.contentBlock__dialogs + \" \" + s.dflex}>\r\n                <div className={s.dialogs + ' ' + s.dflex}>\r\n\r\n                    {dialogElements}\r\n\r\n                </div>\r\n                <div className={s.messages}>\r\n\r\n                    {messageElements}\r\n\r\n                    <AddMessageFormRedux onSubmit={addNewMessage} />\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\nconst maxLenght50 = maxLenghtCreator(50);\r\n\r\nconst AddMessageForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div className={s.contentBlock__textarea_button + \" \" + s.dflex}>\r\n                <Field component={Textarea} \r\n                       name='newMessageBody' \r\n                       placeholder={'New message'}\r\n                       validate={[required, maxLenght50]}\r\n                       />\r\n                <button>\r\n                    <span>\r\n                        SEND  &#8594;\r\n                    </span>\r\n                </button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst AddMessageFormRedux = reduxForm({ form: 'dialogAddMessageForm' })(AddMessageForm);\r\n\r\nexport default Dialogs;","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Navigate } from \"react-router-dom\";\r\nlet mapStateToPropsForRedirect = (state) => {\r\n    return {\r\n        isAuth: state.auth.isAuth\r\n    };\r\n};\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n\r\n\r\n    class RedirectComponent extends React.Component {\r\n         render() {\r\n            if(!this.props.isAuth) return <Navigate to={'/login'}/>\r\n\r\n            return <Component {...this.props}/>\r\n         }\r\n    }\r\n\r\n    let ConectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n\r\n    return ConectedAuthRedirectComponent;\r\n};\r\n","\r\nimport { addNewMesageActionCreator } from '../../../redux/messageREDUCER';\r\nimport Dialogs from './Dialogs';\r\nimport { connect } from 'react-redux';\r\nimport { withAuthRedirect } from '../../../hoc/withAuthRedirect';\r\nimport { compose } from 'redux';\r\n\r\nlet mapStateToProps = (state)=> {\r\n\r\n    return {\r\n        messagePAGE: state.messagePAGE\r\n    };\r\n};\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n\r\n    return {\r\n        newMessageDialogsGlobal: (newMessageBody) => {\r\n            dispatch(addNewMesageActionCreator(newMessageBody));\r\n        }\r\n    };\r\n};\r\n\r\n\r\n// const DialogsContainer = connect(mapStateToProps, mapDispatchToProps)(AuthRedirectComponent);\r\n\r\nlet AuthRedirectComponent = withAuthRedirect(Dialogs);\r\n\r\n\r\nconst DialogsContainer = connect(mapStateToProps, mapDispatchToProps)(AuthRedirectComponent);\r\n\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    \r\n    withAuthRedirect) (DialogsContainer);"],"names":["props","path","id","_jsx","className","s","dialogs","dflex","children","NavLink","item","to","name","_jsxs","messagesBlock","src","Icon","alt","messagesItem","messageText","maxLenght50","maxLenghtCreator","AddMessageFormRedux","reduxForm","form","onSubmit","handleSubmit","contentBlock__textarea_button","Field","component","Textarea","placeholder","validate","required","state","messagePAGE","dialogElements","dialogData","map","d","index","DialogItem","messageElements","messageData","m","MessageItem","message","isAuth","contentBlock","contentBlock__dialogs","messages","values","newMessageDialogsGlobal","newMessageBody","Navigate","mapStateToPropsForRedirect","auth","withAuthRedirect","Component","RedirectComponent","_React$Component","_inherits","_super","_createSuper","_classCallCheck","apply","arguments","_createClass","key","value","this","_objectSpread","React","connect","mapStateToProps","mapDispatchToProps","dispatch","addNewMesageActionCreator","AuthRedirectComponent","Dialogs","DialogsContainer","compose"],"sourceRoot":""}